name: Unit tests

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install flake8 and lint
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Install package and dependencies
        run: |
          pip install .[testing]
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with nose
        run: |
          nosetests -s --cov-config .coveragerc --with-coverage --cover-package=catsim
      - name: Code coverage with coveralls
        run: |
          coveralls
  format-push:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Install formatters
        run: |
          pip install .[dev]
      - name: Format code
        run: |
          isort
          black .
          yapf -i -r .
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Douglas Meneghetti'
          git config --global user.email 'douglasrizzom@gmail.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Automated changes"
          git push
